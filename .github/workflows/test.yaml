name: "CI pipeline"
on:
  push:
  pull_request:
jobs:
  build_and_synthesize:
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4 
      - name: check formatting 
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: baublesaurus/clockbox:latest
          options: -v ${{ github.workspace }}:/work
          run: |
            mkdir /tmp
            cd work
            # check formating 
            make check_format
      - name: test-library
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: baublesaurus/clockbox:latest
          options: -v ${{ github.workspace }}:/work
          run: |
            mkdir /tmp
            cd work
            cabal test test-library --verbose=0
      - name: place and route
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: baublesaurus/clockbox:latest
          options: -v ${{ github.workspace }}:/work
          run: |
            mkdir /tmp
            cd work
            # make verilog
            cabal run clash -- Clash.Lattice.ECP5.Colorlight.TopEntity --verilog -g -fclash-clear
            # make netlist 
            dir -p netlist
            yosys \
              -m ${YOSYS_ECP5_INFER_OUTREG_LIB} \
              -p "synth_ecp5 -no-rw-check -abc2 -top topEntity" \
              -p "ecp5_infer_bram_outreg" \
              -p "write_json ${netlist}" \
              verilog/Clash.Lattice.ECP5.Colorlight.TopEntity.topEntity/*.v
            # place and route
            nextpnr-ecp5 --json ${netlist} \
              --lpf pinout.lpf \
              --textcfg ${pnr} --25k \
              --speed 6 \w
              --package CABGA256 \
              --randomize-seed --timing-allow-fail
