name: "CI pipeline"
on:
  push:
  pull_request:
jobs:
  file_endings:
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4
      - name: Whitespace file endings
        run: |
          .ci/test_whitespace.sh

  build_and_synthesize:
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4 
      - name: run docker image
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: baublesaurus/clockbox:latest
          options: -v ${{ github.workspace }}:/work
          run: |
            mkdir /tmp
            cabal test
            # cabal run clash -- Clash.Lattice.ECP5.Colorlight.TopEntity --verilog -g -fclash-clear
            # mkdir -p netlist
            # yosys \
            #   -m ${YOSYS_ECP5_INFER_OUTREG_LIB} \
            #   -p "synth_ecp5 -no-rw-check -abc2 -top topEntity" \
            #   -p "ecp5_infer_bram_outreg" \
            #   -p "write_json ${netlist}" \
            #   verilog/Clash.Lattice.ECP5.Colorlight.TopEntity.topEntity/*.v
            # nextpnr-ecp5 --json ${netlist} \
            #   --lpf pinout.lpf \
            #   --textcfg ${pnr} --25k \
            #   --speed 6 \w
            #   --package CABGA256 \
            #   --randomize-seed --timing-allow-fail
            rm -rf dist-newstyle
            rm -rf verilog
            rm -rf netlist
